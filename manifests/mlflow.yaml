apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: mlflow
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mlflow-configmap
data:
  DB_NAME: "mlflow-tracking-server-database"
  DB_USERNAME: "admin"
  DB_HOST: "mlflow-postgresql"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-postgresql-data
  namespace: mlflow
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: ebs-sc
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mlflow-postgresql
    
  name: mlflow-postgresql
  namespace: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-postgresql
      
  template:
    metadata:
      labels:
        app: mlflow-postgresql
        
    spec:
      initContainers:
      - name: take-data-dir-ownership
        image:  alpine:3.16.2
        command: ['sh', '-c','chmod 777 /bitnami/postgresql' ]

        
        volumeMounts:
        - name: postgresql-data
          mountPath: "/bitnami/postgresql"
     
      containers:
      - image: bitnami/postgresql
        name: postgresql
       
        env:
        - name: POSTGRESQL_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mlflow-configmap
              key: DB_USERNAME
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: DB_PASSWORD
        - name: POSTGRESQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mlflow-configmap
              key: DB_NAME
        resources:
          limits:
            memory: "8Gi"
            cpu: "4"
          requests:
            memory: 1024Mi
            cpu: "0.5"
        volumeMounts:
        - name: postgresql-data
          mountPath: "/bitnami/postgresql"
      imagePullSecrets:
      - name: mlflow-pull-0873
      restartPolicy: Always
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: "mlflow-postgresql-data"
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-postgresql
  namespace: mlflow
  labels:
    mlflow: mlflow-service
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
      protocol: TCP
  type: ClusterIP
  selector:
    app: mlflow-postgresql
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-tracking-server
  namespace: mlflow
  labels:
      app: mlflow-tracking-server
spec:
  # The replica count is kept to one for simplicity purposes.
  # To create a highly available app, the replica count would
  # be higher.
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-tracking-server-pods
  template:
    metadata:
      labels:
        app: mlflow-tracking-server-pods
    spec:
    ##  The init container is needed only if we update the version of mlflow to do DB migration
      # initContainers:
      # - name: database-upgrade
      #   image: aabccontainerregistry.azurecr.io/mlflow:latest
      #   command: ['sh', '-c','mlflow db upgrade  postgresql://$DB_USERNAME:$DB_PASSWORD@$DB_URL/$DB_NAME' ]
      #   env: # we extract the values we set in the configmap and mount them as environmen variables in the pods.
      #     - name: DB_PASSWORD
      #       valueFrom:
      #         secretKeyRef:
      #           name: mlflow-secret
      #           key: DB_PASSWORD
      #     - name: DB_USERNAME
      #       valueFrom:
      #         configMapKeyRef:
      #           name: mlflow-configmap
      #           key: DB_USERNAME
      #     - name: DB_URL
      #       valueFrom:
      #         configMapKeyRef:
      #           name: mlflow-configmap
      #           key: DB_HOST
      #     - name: DB_NAME
      #       valueFrom:
      #         configMapKeyRef:
      #           name: mlflow-configmap
      #           key: DB_NAME
      containers:
        - name: mlflow-tracking-server-pod
          # The docker image is pulled from dockerhub.
          image: aabccontainerregistry.azurecr.io/mlflow:${COMMIT}
          imagePullPolicy: Always
          env: # we extract the values we set in the configmap and mount them as environmen variables in the pods.
          - name: DEFAULT_ARTIFACT_ROOT
            valueFrom:
              configMapKeyRef:
                name: default-artifact-root
                key: DEFAULT_ARTIFACT_ROOT
           
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mlflow-secret
                key: DB_PASSWORD
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: mlflow-configmap
                key: DB_USERNAME
          - name: DB_URL
            valueFrom:
              configMapKeyRef:
                name: mlflow-configmap
                key: DB_HOST
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: mlflow-configmap
                key: DB_NAME
          
          - name: AZURE_STORAGE_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: aamlflowartifacts-cstring
                key: AZURE_STORAGE_CONNECTION_STRING
          - name: AZURE_STORAGE_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aamlflowartifacts-key
                key: AZURE_STORAGE_ACCESS_KEY
          resources:
            limits:
              memory: "3Gi"
              cpu: "2"
            requests:
              memory: 512Mi
              cpu: "0.5"
      imagePullSecrets:
      - name: mlflow-pull-0873
    

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mlflow-tracking-server
  name: mlflow-tracking-server
  namespace: mlflow
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: mlflow-tracking-server-pods